{"version":3,"sources":["App.js","itemTableComponent/itemTableController.js","searchItemComponent/searchItemController.js","saveItemComponent/saveItemController.js","index.js"],"names":["App","menuitems","label","icon","command","props","history","push","className","model","id","this","children","Component","withRouter","URL","descendingComparator","a","b","orderBy","getComparator","order","stableSort","array","comparator","stabilizedThis","map","el","index","sort","headCells","numeric","disablePadding","EnhancedTableHead","classes","onSelectAllClick","numSelected","rowCount","onRequestSort","TableHead","TableRow","TableCell","padding","Checkbox","indeterminate","checked","onChange","inputProps","headCell","sortDirection","TableSortLabel","active","direction","onClick","property","event","visuallyHidden","useToolbarStyles","makeStyles","theme","root","paddingLeft","spacing","paddingRight","highlight","palette","type","color","secondary","main","backgroundColor","lighten","light","text","primary","title","flex","EnhancedTableToolbar","itemSelected","Toolbar","clsx","Typography","variant","component","Tooltip","IconButton","aria-label","deleteItem","axios","delete","then","res","window","location","reload","catch","alert","useStyles","width","paper","marginBottom","table","minWidth","border","clip","height","margin","overflow","position","top","EnhancedTable","item","React","useState","setOrder","setOrderBy","selected","setSelected","setItemSelected","page","setPage","dense","setDense","rowsPerPage","setRowsPerPage","emptyRows","Math","min","rows","length","Paper","TableContainer","Table","stickyHeader","aria-labelledby","size","target","newSelecteds","n","itemName","itemSelectds","forEach","TableBody","slice","row","name","isItemSelected","indexOf","labelId","hover","selectedIndex","newSelected","concat","handleClick","role","aria-checked","tabIndex","scope","itemStatus","style","colSpan","TablePagination","rowsPerPageOptions","count","onPageChange","newPage","onRowsPerPageChange","parseInt","value","FormControlLabel","control","Switch","SearchItem","search","state","get","msg","setState","open","myAlert","message","data","updateRows","Array","isArray","i","bind","e","Snackbar","autoHideDuration","onClose","Alert","severity","SaveItem","save","dataItem","post","updateLabelButton","checkItemExists","itemId","Form","Group","Label","Control","required","as","Button","ReactDOM","render","exact","path","document","getElementById"],"mappings":"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","file":"static/js/main.f5d55d3c.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport 'primereact/resources/themes/nova-alt/theme.css';\nimport 'primereact/resources/primereact.min.css';\nimport 'primeicons/primeicons.css';\nimport './App.css';\nimport { Menubar } from 'primereact/menubar';\nimport {withRouter} from 'react-router-dom';\n\nclass App extends Component {\n    render() {\n        const menuitems = [\n            {\n                label:'Buscar',\n                icon:'pi pi-fw pi-search',\n                command:() => this.props.history.push('/')\n            },\n            {\n                label:'Adicionar/Atualizar',\n                icon:'pi pi-fw pi-save',\n                command:() => this.props.history.push('/save')\n            }\n        ];\n        return (\n            <div className=\"App\">\n                <Menubar model={menuitems}/>\n                <div id=\"main\">\n                    <main>\n                        <div className=\"content\" id=\"content\">\n                            {this.props.children}\n                        </div>\n                    </main>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default withRouter(App);","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { lighten, makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport axios from \"axios\";\r\n\r\nconst URL = \"http://localhost:9090/api/item\"\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n  return order === 'desc'\r\n    ? (a, b) => descendingComparator(a, b, orderBy)\r\n    : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction stableSort(array, comparator) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map((el) => el[0]);\r\n}\r\n\r\nconst headCells = [\r\n    { id: 'itemName', numeric: false, disablePadding: true, label: 'Chamado' },\r\n    { id: 'itemStatus', numeric: false, disablePadding: true, label: 'Status' }\r\n];\r\n\r\nfunction EnhancedTableHead(props) {\r\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\r\n  const createSortHandler = (property) => (event) => {\r\n    onRequestSort(event, property);\r\n  };\r\n\r\n    return (\r\n        <TableHead>\r\n            <TableRow>\r\n                <TableCell padding=\"checkbox\">\r\n                    <Checkbox\r\n                        indeterminate={numSelected > 0 && numSelected < rowCount}\r\n                        checked={rowCount > 0 && numSelected === rowCount}\r\n                        onChange={onSelectAllClick}\r\n                        inputProps={{ 'aria-label': 'select all desserts' }}\r\n                    />\r\n                </TableCell>\r\n                {headCells.map((headCell) => (\r\n                    <TableCell\r\n                        key={headCell.id}\r\n                        padding={headCell.disablePadding ? 'none' : 'default'}\r\n                        sortDirection={orderBy === headCell.id ? order : false}\r\n                    >\r\n                        <TableSortLabel\r\n                            active={orderBy === headCell.id}\r\n                            direction={orderBy === headCell.id ? order : 'asc'}\r\n                            onClick={createSortHandler(headCell.id)}\r\n                        >\r\n                            {headCell.label}\r\n                            {orderBy === headCell.id ? (\r\n                                <span className={classes.visuallyHidden}>\r\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\r\n                </span>\r\n                            ) : null}\r\n                        </TableSortLabel>\r\n                    </TableCell>\r\n                ))}\r\n            </TableRow>\r\n        </TableHead>\r\n    );\r\n}\r\n\r\nEnhancedTableHead.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  numSelected: PropTypes.number.isRequired,\r\n  onRequestSort: PropTypes.func.isRequired,\r\n  onSelectAllClick: PropTypes.func.isRequired,\r\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\r\n  orderBy: PropTypes.string.isRequired,\r\n  rowCount: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useToolbarStyles = makeStyles((theme) => ({\r\n  root: {\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(1),\r\n  },\r\n  highlight:\r\n    theme.palette.type === 'light'\r\n      ? {\r\n          color: theme.palette.secondary.main,\r\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n        }\r\n      : {\r\n          color: theme.palette.text.primary,\r\n          backgroundColor: theme.palette.secondary.light,\r\n        },\r\n  title: {\r\n    flex: '1 1 100%',\r\n  },\r\n}));\r\n\r\nconst EnhancedTableToolbar = (props) => {\r\n    const classes = useToolbarStyles();\r\n    const { numSelected } = props;\r\n    const { itemSelected } = props;\r\n\r\n    return (\r\n        <Toolbar\r\n            className={clsx(classes.root, {\r\n                [classes.highlight]: numSelected > 0,\r\n            })}\r\n        >\r\n            {numSelected > 0 ? (\r\n                <Typography className={classes.title} color=\"inherit\" variant=\"body1\" component=\"div\">\r\n                    {numSelected} selected\r\n                </Typography>\r\n            ) : (\r\n                <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\" component=\"div\">\r\n                    Chamados\r\n                </Typography>\r\n            )}\r\n\r\n            {numSelected > 0 ? (\r\n                <Tooltip title=\"Delete\">\r\n                    <IconButton aria-label=\"delete\" onClick={() => deleteItem(itemSelected)}>\r\n                        <DeleteIcon />\r\n                    </IconButton>\r\n                </Tooltip>\r\n            ) : (\r\n               \"\"\r\n            )}\r\n        </Toolbar>\r\n    );\r\n};\r\n\r\nasync function deleteItem(itemSelected) {\r\n    await axios.delete(URL + '/delete/' + itemSelected)\r\n        .then((res) => {\r\n            window.location.reload();\r\n        })\r\n        .catch(() => {\r\n            alert(\"Ops! Algo deu errado, tente novamente!\");\r\n        });\r\n}\r\n\r\nEnhancedTableToolbar.propTypes = {\r\n  numSelected: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  paper: {\r\n    width: '100%',\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  table: {\r\n    minWidth: 750,\r\n  },\r\n  visuallyHidden: {\r\n    border: 0,\r\n    clip: 'rect(0 0 0 0)',\r\n    height: 1,\r\n    margin: -1,\r\n    overflow: 'hidden',\r\n    padding: 0,\r\n    position: 'absolute',\r\n    top: 20,\r\n    width: 1,\r\n  },\r\n}));\r\n\r\nexport default function EnhancedTable(item) {\r\n    const classes = useStyles();\r\n    const [order, setOrder] = React.useState('asc');\r\n    const [orderBy, setOrderBy] = React.useState('itemName');\r\n    const [selected, setSelected] = React.useState([]);\r\n    const [itemSelected, setItemSelected] = React.useState([]);\r\n    const [page, setPage] = React.useState(0);\r\n    const [dense, setDense] = React.useState(false);\r\n    const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n\r\n    const handleRequestSort = (event, property) => {\r\n        const isAsc = orderBy === property && order === 'asc';\r\n        setOrder(isAsc ? 'desc' : 'asc');\r\n        setOrderBy(property);\r\n    };\r\n\r\n    const handleSelectAllClick = (event) => {\r\n        if (item) {\r\n            if (event.target.checked) {\r\n                const newSelecteds = item.rows.map((n) => n.itemName);\r\n                const itemSelectds = [];\r\n                item.rows.forEach((item) => itemSelectds.push(item.itemName));\r\n                setItemSelected(itemSelectds);\r\n                setSelected(newSelecteds);\r\n                return;\r\n            }\r\n            setSelected([]);\r\n        }\r\n    };\r\n\r\n  const handleClick = (event, name) => {\r\n    const selectedIndex = selected.indexOf(name);\r\n    let newSelected = [];\r\n\r\n    if (selectedIndex === -1) {\r\n      newSelected = newSelected.concat(selected, name);\r\n    } else if (selectedIndex === 0) {\r\n      newSelected = newSelected.concat(selected.slice(1));\r\n    } else if (selectedIndex === selected.length - 1) {\r\n      newSelected = newSelected.concat(selected.slice(0, -1));\r\n    } else if (selectedIndex > 0) {\r\n      newSelected = newSelected.concat(\r\n        selected.slice(0, selectedIndex),\r\n        selected.slice(selectedIndex + 1),\r\n      );\r\n    }\r\n\r\n        setItemSelected(name);\r\n        setSelected(newSelected);\r\n    };\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  const handleChangeDense = (event) => {\r\n    setDense(event.target.checked);\r\n  };\r\n\r\n  const isSelected = (name) => selected.indexOf(name) !== -1;\r\n\r\n    const emptyRows = rowsPerPage - Math.min(rowsPerPage, item.rows.length - page * rowsPerPage);\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Paper className={classes.paper}>\r\n                <EnhancedTableToolbar numSelected={selected.length} itemSelected={itemSelected} />\r\n                <TableContainer>\r\n                    <Table stickyHeader\r\n                        className={classes.table}\r\n                        aria-labelledby=\"tableTitle\"\r\n                        size={dense ? 'small' : 'medium'}\r\n                        aria-label=\"enhanced table\"\r\n                    >\r\n                        <EnhancedTableHead\r\n                            classes={classes}\r\n                            numSelected={selected.length}\r\n                            order={order}\r\n                            orderBy={orderBy}\r\n                            onSelectAllClick={handleSelectAllClick}\r\n                            onRequestSort={handleRequestSort}\r\n                            rowCount={item.rows.length}\r\n                        />\r\n                        <TableBody>\r\n                            {stableSort(item.rows, getComparator(order, orderBy))\r\n                                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                                .map((row, index) => {\r\n                                    const isItemSelected = isSelected(row.itemName);\r\n                                    const labelId = `enhanced-table-checkbox-${index}`;\r\n\r\n                                    return (\r\n                                        <TableRow\r\n                                            hover\r\n                                            onClick={(event) => handleClick(event, row.itemName)}\r\n                                            role=\"checkbox\"\r\n                                            aria-checked={isItemSelected}\r\n                                            tabIndex={-1}\r\n                                            key={row.itemName}\r\n                                            selected={isItemSelected}\r\n                                        >\r\n                                            <TableCell padding=\"checkbox\">\r\n                                                <Checkbox\r\n                                                    checked={isItemSelected}\r\n                                                    inputProps={{ 'aria-labelledby': labelId }}\r\n                                                />\r\n                                            </TableCell>\r\n                                            <TableCell component=\"th\" id={labelId} scope=\"row\" padding=\"none\">\r\n                                                {row.itemName}\r\n                                            </TableCell>\r\n                                            <TableCell component=\"th\" id={labelId} scope=\"row\" padding=\"none\">\r\n                                                {row.itemStatus}\r\n                                            </TableCell>\r\n                                        </TableRow>\r\n                                    );\r\n                                })}\r\n                            {emptyRows > 0 && (\r\n                                <TableRow style={{ height: (dense ? 33 : 53) * emptyRows }}>\r\n                                    <TableCell colSpan={6} />\r\n                                </TableRow>\r\n                            )}\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n                <TablePagination\r\n                    rowsPerPageOptions={[5, 10, 25]}\r\n                    component=\"div\"\r\n                    count={item.rows.length}\r\n                    rowsPerPage={rowsPerPage}\r\n                    page={page}\r\n                    onPageChange={handleChangePage}\r\n                    onRowsPerPageChange={handleChangeRowsPerPage}\r\n                />\r\n            </Paper>\r\n            <FormControlLabel\r\n                control={<Switch checked={dense} onChange={handleChangeDense} />}\r\n                label=\"Dense padding\"\r\n            />\r\n        </div>\r\n    );\r\n}\r\n","import React, {Component} from \"react\";\r\nimport './searchItem.css';\r\nimport axios from \"axios\";\r\nimport EnhancedTable from \"../itemTableComponent/itemTableController\";\r\nimport {Alert, Snackbar} from \"@material-ui/core\";\r\n\r\nconst URL = \"http://localhost:9090/api/item\"\r\n\r\nexport default class SearchItem extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            itemName: \"\",\r\n            itemStatus: \"\",\r\n            open: false,\r\n            myAlert: \"info\",\r\n            message: \"\"\r\n        }\r\n\r\n        this.search = this.search.bind(this);\r\n    }\r\n\r\n    search = async () => {\r\n        let item = this.state.itemName;\r\n        let msg;\r\n\r\n        await axios.get(URL + '/' + item)\r\n            .then(res => {\r\n                msg = \"Estes foram os chamados encontrados!\";\r\n                this.setState({open: true, myAlert: 'success', message: msg});\r\n                this.setState({data: res.data});\r\n                this.setState({itemName: \"\"});\r\n            })\r\n            .catch(res => {\r\n                msg = \"Ops!, Não foi encontrado nenhum chamado, tente novamente!\";\r\n                this.setState({open: true, myAlert: 'error', message: msg});\r\n                this.setState({itemName: \"\"});\r\n            })\r\n    }\r\n\r\n    updateRows = () => {\r\n        let rows = [];\r\n\r\n        if (this.state.data) {\r\n            if (Array.isArray(this.state.data)) {\r\n                for(let i=0; i<this.state.data.length; i++) {\r\n                    rows.push(\r\n                        {itemName: this.state.data[i].itemName, itemStatus: this.state.data[i].itemStatus}\r\n                    );\r\n                }\r\n            } else {\r\n                rows.push(\r\n                    {itemName: this.state.data.itemName, itemStatus: this.state.data.itemStatus}\r\n                );\r\n            }\r\n        }\r\n\r\n        return rows;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"searchItem\">\r\n                <div className=\"search\">\r\n                    <input className=\"searchBar\" onChange={(e) => this.setState({itemName: e.target.value})}/>\r\n                    <input className=\"searchButton\" type=\"button\" value=\"Buscar\" onClick={this.search}/>\r\n                </div>\r\n                <div style={{ height: 400, width: '100%' }} >\r\n                    <EnhancedTable rows={this.updateRows()}/>\r\n                </div>\r\n                <Snackbar open={this.state.open} autoHideDuration={4500} onClose={() => this.setState({open: false})}>\r\n                    <Alert severity={this.state.myAlert}>\r\n                        {this.state.message}\r\n                    </Alert>\r\n                </Snackbar>\r\n            </div>\r\n        );\r\n    }\r\n}","import React, {Component, useState} from \"react\";\r\nimport './saveItem.css';\r\nimport {Button, Form} from \"react-bootstrap\";\r\nimport axios from \"axios\";\r\nimport {Alert, Snackbar} from \"@material-ui/core\";\r\n\r\nconst URL = \"http://localhost:9090/api/item\"\r\n\r\nexport default class SaveItem extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            open: false,\r\n            myAlert: \"info\",\r\n            message: \"\",\r\n            itemName: \"\",\r\n            itemStatus: \"Disponivel\",\r\n            updateLabelButton: 'Salvar'\r\n        }\r\n        this.save = this.save.bind(this);\r\n    }\r\n\r\n    save = async () => {\r\n        let dataItem = {\r\n            itemName: this.state.itemName,\r\n            itemStatus: this.state.itemStatus\r\n        }\r\n\r\n        let msg = \"\";\r\n\r\n        await axios.post(URL + '/save', dataItem)\r\n            .then(res => {\r\n                if (this.state.updateLabelButton === 'Salvar') {\r\n                    msg = \"O chamado foi cadastro com sucesso!\";\r\n                } else {\r\n                    msg = \"O chamado foi atualizado com sucesso!\";\r\n                }\r\n\r\n                this.setState({open: true, myAlert: 'success', message: msg});\r\n                this.setState({itemName: \"\"});\r\n            })\r\n            .catch(res => {\r\n                msg = \"Ops! houve um erro durante o cadastro deste chamado, tente novamente!\";\r\n                this.setState({open: true, myAlert: 'error', message: msg});\r\n                this.setState({itemName: \"\"});\r\n            });\r\n    }\r\n\r\n    checkItemExists = (itemId) => {\r\n        if (itemId) {\r\n            axios.get(URL + '/' + itemId)\r\n                .then(res => {\r\n                    if (res.data) {\r\n                        this.setState({updateLabelButton: 'Atualizar'});\r\n                    }\r\n                })\r\n                .catch(res => {\r\n                    this.setState({updateLabelButton: 'Salvar'});\r\n                })\r\n        } else {\r\n            this.setState({updateLabelButton: 'Salvar'});\r\n        }\r\n\r\n        this.setState({itemName: itemId});\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Form className=\"saveItem\">\r\n                <Form.Group className=\"groupTextItem\">\r\n                    <Form.Label className=\"title\">Item: </Form.Label>\r\n                    <Form.Control type=\"text\" className=\"textItem\" required name=\"item\" value={this.state.itemName}\r\n                                  onChange={(e) => this.checkItemExists(e.target.value)}/>\r\n                </Form.Group>\r\n\r\n                <Form.Group className=\"groupSelectItem\">\r\n                    <Form.Label className=\"title\">Status: </Form.Label>\r\n                    <Form.Control as=\"select\" className=\"selectItem\" name=\"option\"\r\n                                  onChange={(e) => this.setState({itemStatus: e.target.value})}>\r\n                        <option>Disponivel</option>\r\n                        <option>Aguardando Feedback</option>\r\n                        <option>Qualidade</option>\r\n                    </Form.Control>\r\n                </Form.Group>\r\n                <Button variant=\"primary\" className=\"buttonSubmit\" onClick={this.save}>\r\n                    {this.state.updateLabelButton}\r\n                </Button>\r\n                <Snackbar open={this.state.open} autoHideDuration={4500} onClose={() => this.setState({open: false})}>\r\n                    <Alert severity={this.state.myAlert}>\r\n                        {this.state.message}\r\n                    </Alert>\r\n                </Snackbar>\r\n            </Form>\r\n        )\r\n    }\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport SearchItem from \"./searchItemComponent/searchItemController\"\nimport SaveItem from \"./saveItemComponent/saveItemController\"\n\nReactDOM.render(\n    (\n        <Router>\n            <App>\n                <Switch>\n                    <Route exact path=\"/\" component={SearchItem}/>\n                    <Route path=\"/save\" component={SaveItem}/>\n                </Switch>\n            </App>\n        </Router>\n    ),\n    document.getElementById('root')\n);"],"sourceRoot":""}